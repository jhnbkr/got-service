# Generated by Django 4.0.1 on 2022-01-17 17:05

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models

import project.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        validators=[project.validators.TypeValidator(dict)],
                        verbose_name="Metadata",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("name", models.CharField(max_length=256, verbose_name="Name")),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=32,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "born",
                    models.CharField(blank=True, max_length=256, verbose_name="Born"),
                ),
                (
                    "died",
                    models.CharField(blank=True, max_length=256, verbose_name="Died"),
                ),
                (
                    "titles",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Titles",
                    ),
                ),
                (
                    "aliases",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Aliases",
                    ),
                ),
            ],
            options={
                "verbose_name": "Character",
                "verbose_name_plural": "Characters",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Culture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        validators=[project.validators.TypeValidator(dict)],
                        verbose_name="Metadata",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "name",
                    models.CharField(max_length=256, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Culture",
                "verbose_name_plural": "Cultures",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        validators=[project.validators.TypeValidator(dict)],
                        verbose_name="Metadata",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "name",
                    models.CharField(max_length=256, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Region",
                "verbose_name_plural": "Regions",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="House",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        validators=[project.validators.TypeValidator(dict)],
                        verbose_name="Metadata",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                ("name", models.CharField(max_length=256, verbose_name="Name")),
                (
                    "coat_of_arms",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Coat of Arms"
                    ),
                ),
                (
                    "words",
                    models.CharField(blank=True, max_length=256, verbose_name="words"),
                ),
                (
                    "seats",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Seats",
                    ),
                ),
                (
                    "founded",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="founded"
                    ),
                ),
                (
                    "ancestral_weapons",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="Ancestral Weapons",
                    ),
                ),
                (
                    "founder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="founder_of",
                        to="content.character",
                        verbose_name="Founder",
                    ),
                ),
                (
                    "heir",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="heir_of",
                        to="content.character",
                        verbose_name="Heir",
                    ),
                ),
                (
                    "lord",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lord_of",
                        to="content.character",
                        verbose_name="Lord",
                    ),
                ),
                (
                    "overlord",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="overlord_of",
                        to="content.character",
                        verbose_name="Overlord",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="houses",
                        to="content.region",
                        verbose_name="Region",
                    ),
                ),
            ],
            options={
                "verbose_name": "House",
                "verbose_name_plural": "Houses",
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="character",
            name="allegiances",
            field=models.ManyToManyField(
                blank=True, to="content.House", verbose_name="Allegiances"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="culture",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="content.culture",
                verbose_name="Culture",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="father",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="father_of",
                to="content.character",
                verbose_name="Father",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="mother",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="mother_of",
                to="content.character",
                verbose_name="Mother",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="spouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="spouse_of",
                to="content.character",
                verbose_name="Spouse",
            ),
        ),
    ]
